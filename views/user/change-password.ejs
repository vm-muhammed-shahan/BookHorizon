<!DOCTYPE html>
<html lang="en">
  <%- include("../../views/partials/user/header") %>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>

<style>
  body {
    background-color: #f8f9fa;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }

  .change-password-section {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 20px;
  }

  .password-form,
  .password-image {
    flex: 1;
    padding: 15px;
  }

  .password-form {
    max-width: 60%;
  }

  .password-image {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    max-width: 35%;
    background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%);
    border-radius: 0 1rem 1rem 0;
    color: white;
  }

  .spacer {
    height: 30px;
  }

  .form-group {
    position: relative;
    margin-bottom: 1.5rem;
  }

  .form-group label {
    font-size: 0.875rem;
    font-weight: 600;
    color: #1a1a1a;
    margin-bottom: 0.5rem;
    display: block;
  }

  .form-control {
    font-size: 0.875rem;
    padding: 0.75rem 2.5rem 0.75rem 0.75rem;
    border: 2px solid #e9ecef;
    border-radius: 0.5rem;
    transition: border-color 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
    width: 100%;
    background-color: #ffffff;
    color: #1a1a1a;
  }

  .form-control:focus {
    border-color: #1a1a1a;
    box-shadow: 0 0 0 0.25rem rgba(26, 26, 26, 0.15);
    outline: none;
    background-color: #ffffff;
  }

  .form-control:hover {
    border-color: #6c757d;
  }

  .btn-primary {
    padding: 0.875rem 2rem;
    font-size: 0.875rem;
    font-weight: 600;
    background-color: #1a1a1a;
    border: 2px solid #1a1a1a;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
    color: white;
  }

  .btn-primary:hover {
    background-color: #2c2c2c;
    border-color: #2c2c2c;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(26, 26, 26, 0.2);
  }

  .btn-primary:active {
    transform: translateY(0);
  }

  .btn-primary:disabled {
    background-color: #6c757d;
    border-color: #6c757d;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .card-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: #1a1a1a;
    margin-bottom: 2rem;
    text-align: center;
    letter-spacing: -0.025em;
  }

  .error-message {
    color: #dc3545;
    font-size: 0.75rem;
    margin-top: 0.5rem;
    opacity: 0;
    transform: translateY(-5px);
    transition: opacity 0.3s ease, transform 0.3s ease;
    font-weight: 500;
  }

  .error-message.show {
    display: block;
    opacity: 1;
    transform: translateY(0);
  }

  .guideline {
    color: #6c757d;
    font-size: 0.75rem;
    margin-top: 0.5rem;
    font-weight: 400;
  }

  .valid-field {
    border: 2px solid #1a1a1a !important;
    background-color: #f8f9fa !important;
  }

  .valid-tick {
    color: #1a1a1a;
    font-size: 1rem;
    text-align: center;
    margin-bottom: 1.5rem;
    background-color: #f8f9fa;
    padding: 1rem;
    border-radius: 0.5rem;
    border: 2px solid #e9ecef;
    opacity: 0;
    transform: scale(0.95);
    transition: opacity 0.3s ease, transform 0.3s ease;
    font-weight: 600;
  }

  .valid-tick.show {
    display: block;
    opacity: 1;
    transform: scale(1);
    border-color: #1a1a1a;
    background-color: #ffffff;
  }

  .profile-link {
    color: #1a1a1a;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    border-bottom: 2px solid transparent;
  }

  .profile-link:hover {
    color: #2c2c2c;
    border-bottom-color: #1a1a1a;
    text-decoration: none;
  }

  .card {
    border: none;
    border-radius: 1rem;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    border: 1px solid #e9ecef;
  }

  .password-form {
    padding: 2.5rem;
    background-color: #ffffff;
  }

  .security-icon {
    font-size: 4rem;
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: 1.5rem;
  }

  .security-text {
    font-size: 1.1rem;
    text-align: center;
    color: rgba(255, 255, 255, 0.9);
    line-height: 1.6;
  }

  .security-text h4 {
    font-weight: 700;
    margin-bottom: 1rem;
    font-size: 1.5rem;
  }

  .password-strength {
    font-size: 0.75rem;
    margin-top: 0.5rem;
    font-weight: 600;
    color: #6c757d;
  }

  .password-strength.weak { 
    color: #dc3545; 
  }
  .password-strength.medium { 
    color: #6c757d; 
  }
  .password-strength.strong { 
    color: #1a1a1a; 
  }

  .toggle-password {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    color: #6c757d;
    font-size: 1rem;
    transition: color 0.3s ease;
    z-index: 10;
  }

  .toggle-password:hover {
    color: #1a1a1a;
  }

  .alert-danger {
    background-color: #f8f9fa;
    border: 2px solid #dc3545;
    color: #dc3545;
    border-radius: 0.5rem;
    font-weight: 500;
  }

  .form-control:focus + .toggle-password {
    color: #1a1a1a;
  }

  .mt-80 { margin-top: 5rem; }
  .mb-80 { margin-bottom: 5rem; }

  @media (max-width: 768px) {
    .change-password-section {
      flex-direction: column;
    }
    
    .password-form,
    .password-image {
      max-width: 100%;
    }
    
    .password-image {
      border-radius: 0 0 1rem 1rem;
      min-height: 200px;
    }

    .password-form {
      padding: 2rem 1.5rem;
    }

    .card-title {
      font-size: 1.5rem;
    }
  }

  .form-group:hover .guideline {
    color: #1a1a1a !important;
  }

  * {
    transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
  }
</style>

<section class="content-main mt-80 mb-80">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-10 col-lg-8">
        <div class="card">
          <div class="card-body change-password-section p-0">
            <div class="password-form">
              <div id="valid-tick" class="valid-tick">
                <i class="fas fa-check-circle"></i> All fields are valid
              </div>
              
              <h3 class="card-title">Change Password</h3>
              
              <form id="passwordForm" method="post" action="/change-password">
                <div class="form-group">
                  <label for="currentPassword">Current Password</label>
                  <div style="position: relative;">
                    <input type="password" class="form-control" name="currentPassword" id="currentPassword" 
                           placeholder="Enter your current password" required />
                    <i class="fas fa-eye toggle-password" id="toggleCurrentPassword"></i>
                  </div>
                  <div id="error1" class="error-message"></div>
                  <div class="guideline">Must be your existing password for verification (checked on submit).</div>
                </div>

                <div class="form-group">
                  <label for="newPass1">New Password</label>
                  <div style="position: relative;">
                    <input type="password" class="form-control" name="newPass1" id="newPass1" 
                           placeholder="Enter new password" required />
                    <i class="fas fa-eye toggle-password" id="toggleNewPass1"></i>
                  </div>
                  <div id="error2" class="error-message"></div>
                  <div class="guideline">Must be 8+ characters with uppercase, lowercase, number, and special character.</div>
                  <div id="passwordStrength" class="password-strength"></div>
                </div>

                <div class="form-group">
                  <label for="newPass2">Confirm New Password</label>
                  <div style="position: relative;">
                    <input type="password" class="form-control" name="newPass2" id="newPass2" 
                           placeholder="Re-enter new password" required />
                    <i class="fas fa-eye toggle-password" id="toggleNewPass2"></i>
                  </div>
                  <div id="error3" class="error-message"></div>
                  <div class="guideline">Must match the new password entered above.</div>
                </div>

                <div class="alert alert-danger text-center mb-4" style="display: none;">
                  Error message would appear here
                </div>

                <div class="d-grid mb-4">
                  <button type="submit" class="btn btn-primary" id="submit-btn" disabled>
                    <i class="fas fa-lock me-2"></i>Change Password
                  </button>
                </div>
              </form>
              
              <div class="text-center">
                <p class="mb-0">Back to <a href="/profile" class="profile-link">Profile</a></p>
              </div>
            </div>

            <div class="password-image">
              <div class="text-center">
                <div class="security-icon">
                  <i class="fas fa-shield-alt"></i>
                </div>
                <div class="security-text">
                  <h4 class="text-white mb-3">Secure Your Account</h4>
                  <p>Protect your account with a strong password.</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<div class="spacer"></div>

<script>
  const currentPasswordField = document.getElementById("currentPassword");
  const newPass1Field = document.getElementById("newPass1");
  const newPass2Field = document.getElementById("newPass2");
  const error1 = document.getElementById("error1");
  const error2 = document.getElementById("error2");
  const error3 = document.getElementById("error3");
  const passwordForm = document.getElementById("passwordForm");
  const submitBtn = document.getElementById("submit-btn");
  const validTick = document.getElementById("valid-tick");
  const passwordStrength = document.getElementById("passwordStrength");
  const toggleCurrentPassword = document.getElementById("toggleCurrentPassword");
  const toggleNewPass1 = document.getElementById("toggleNewPass1");
  const toggleNewPass2 = document.getElementById("toggleNewPass2");

  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  
  function togglePasswordVisibility(field, toggleIcon) {
    const isPassword = field.type === "password";
    field.type = isPassword ? "text" : "password";
    toggleIcon.classList.toggle("fa-eye", isPassword);
    toggleIcon.classList.toggle("fa-eye-slash", !isPassword);
  }

  function validateCurrentPassword() {
    const currentPasswordVal = currentPasswordField.value.trim();
    if (!currentPasswordVal) {
      error1.classList.add("show");
      error1.innerHTML = "Current password is required";
      currentPasswordField.classList.remove("valid-field");
      return false;
    } else {
      error1.classList.remove("show");
      error1.innerHTML = "";
      currentPasswordField.classList.add("valid-field");
      return true;
    }
  }

  function validateNewPassword() {
    const newPasswordVal = newPass1Field.value;
    const confirmPasswordVal = newPass2Field.value;
    const passPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
    let isValid = true;

    if (newPasswordVal.length === 0) {
      passwordStrength.innerHTML = "";
      passwordStrength.className = "password-strength";
    } else if (newPasswordVal.length < 8) {
      passwordStrength.innerHTML = "Weak: Too short";
      passwordStrength.className = "password-strength weak";
    } else if (passPattern.test(newPasswordVal)) {
      passwordStrength.innerHTML = "Strong: Meets all requirements";
      passwordStrength.className = "password-strength strong";
    } else {
      passwordStrength.innerHTML = "Medium: Needs more complexity";
      passwordStrength.className = "password-strength medium";
    }

    if (!newPasswordVal) {
      error2.classList.add("show");
      error2.innerHTML = "New password is required";
      newPass1Field.classList.remove("valid-field");
      isValid = false;
    } else if (!passPattern.test(newPasswordVal)) {
      error2.classList.add("show");
      error2.innerHTML = "Password must be 8+ characters with uppercase, lowercase, number, and special character";
      newPass1Field.classList.remove("valid-field");
      isValid = false;
    } else if (newPasswordVal === currentPasswordField.value) {
      error2.classList.add("show");
      error2.innerHTML = "New password must differ from current password";
      newPass1Field.classList.remove("valid-field");
      isValid = false;
    } else {
      error2.classList.remove("show");
      error2.innerHTML = "";
      newPass1Field.classList.add("valid-field");
    }

    if (!confirmPasswordVal) {
      error3.classList.add("show");
      error3.innerHTML = "Confirm password is required";
      newPass2Field.classList.remove("valid-field");
      isValid = false;
    } else if (newPasswordVal !== confirmPasswordVal) {
      error3.classList.add("show");
      error3.innerHTML = "Passwords do not match";
      newPass2Field.classList.remove("valid-field");
      isValid = false;
    } else {
      error3.classList.remove("show");
      error3.innerHTML = "";
      newPass2Field.classList.add("valid-field");
    }

    return isValid;
  }

  function checkAllFieldsValid() {
    const isCurrentPasswordValid = validateCurrentPassword();
    const isNewPasswordValid = validateNewPassword();

    const allValid = isCurrentPasswordValid && isNewPasswordValid;
    submitBtn.disabled = !allValid;
    validTick.classList.toggle("show", allValid);
  }

  document.addEventListener("DOMContentLoaded", function () {
    submitBtn.disabled = true;

    <% if (typeof message !== 'undefined') { %>
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: '<%= message %>',
        confirmButtonColor: '#1a1a1a'
      });
    <% } %>

    <% if (typeof successMessage !== 'undefined') { %>
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: '<%= successMessage %>',
        confirmButtonColor: '#1a1a1a'
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = '/profile';
        }
      });
    <% } %>

    toggleCurrentPassword.addEventListener("click", () => togglePasswordVisibility(currentPasswordField, toggleCurrentPassword));
    toggleNewPass1.addEventListener("click", () => togglePasswordVisibility(newPass1Field, toggleNewPass1));
    toggleNewPass2.addEventListener("click", () => togglePasswordVisibility(newPass2Field, toggleNewPass2));

    passwordForm.addEventListener("submit", function (e) {
      const isCurrentPasswordValid = validateCurrentPassword();
      const isNewPasswordValid = validateNewPassword();

      if (!isCurrentPasswordValid || !isNewPasswordValid) {
        e.preventDefault();
      }
    });

    currentPasswordField.addEventListener("input", debounce(() => {
      validateCurrentPassword();
      checkAllFieldsValid();
    }, 300));

    newPass1Field.addEventListener("input", debounce(() => {
      validateNewPassword();
      checkAllFieldsValid();
    }, 300));

    newPass2Field.addEventListener("input", debounce(() => {
      validateNewPassword();
      checkAllFieldsValid();
    }, 300));

    [currentPasswordField, newPass1Field, newPass2Field].forEach(field => {
      field.addEventListener("focus", () => {
        field.parentElement.querySelector(".guideline").style.color = "#1a1a1a";
      });
      field.addEventListener("blur", () => {
        field.parentElement.querySelector(".guideline").style.color = "#6c757d";
      });
    });
  });
</script>
<%- include("../../views/partials/user/footer") %>
</body>
</html>

