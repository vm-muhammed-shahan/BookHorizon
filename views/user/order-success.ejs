<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Confirmed</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
</head>
<body>
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    :root {
        --primary-black: #000000;
        --soft-black: #0a0a0a;
        --charcoal: #1a1a1a;
        --dark-grey: #2a2a2a;
        --medium-grey: #666666;
        --light-grey: #cccccc;
        --pure-white: #ffffff;
        --off-white: #f8f8f8;
        
        --shadow-dark: 0 20px 60px rgba(0, 0, 0, 0.4);
        --shadow-light: 0 10px 30px rgba(0, 0, 0, 0.2);
        --shadow-subtle: 0 4px 20px rgba(0, 0, 0, 0.1);
        --glow-white: 0 0 30px rgba(255, 255, 255, 0.1);
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: linear-gradient(135deg, var(--primary-black) 0%, var(--soft-black) 50%, var(--charcoal) 100%);
        min-height: 100vh;
        position: relative;
        overflow-x: hidden;
        color: var(--pure-white);
    }

    /* Geometric background pattern */
    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
            linear-gradient(45deg, transparent 40%, rgba(255,255,255,0.02) 50%, transparent 60%),
            linear-gradient(-45deg, transparent 40%, rgba(255,255,255,0.01) 50%, transparent 60%);
        background-size: 60px 60px;
        z-index: -2;
        animation: patternShift 30s linear infinite;
    }

    @keyframes patternShift {
        0% { transform: translate(0, 0); }
        100% { transform: translate(60px, 60px); }
    }

    .floating-elements {
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: -1;
        overflow: hidden;
    }

    .geometric-shape {
        position: absolute;
        border: 1px solid rgba(255, 255, 255, 0.05);
        background: rgba(255, 255, 255, 0.02);
        animation: geometricFloat 20s infinite ease-in-out;
    }

    .geometric-shape:nth-child(1) {
        width: 100px;
        height: 100px;
        top: 10%;
        left: 5%;
        transform: rotate(45deg);
        animation-delay: -2s;
    }

    .geometric-shape:nth-child(2) {
        width: 60px;
        height: 60px;
        top: 70%;
        right: 10%;
        border-radius: 50%;
        animation-delay: -8s;
    }

    .geometric-shape:nth-child(3) {
        width: 80px;
        height: 80px;
        top: 30%;
        right: 15%;
        clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
        animation-delay: -4s;
    }

    .geometric-shape:nth-child(4) {
        width: 120px;
        height: 120px;
        bottom: 20%;
        left: 8%;
        clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
        animation-delay: -12s;
    }

    @keyframes geometricFloat {
        0%, 100% { 
            transform: translateY(0px) rotate(0deg); 
            opacity: 0.3; 
        }
        25% { 
            transform: translateY(-20px) rotate(90deg); 
            opacity: 0.1; 
        }
        50% { 
            transform: translateY(0px) rotate(180deg); 
            opacity: 0.4; 
        }
        75% { 
            transform: translateY(20px) rotate(270deg); 
            opacity: 0.2; 
        }
    }

    .success-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 2rem;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        position: relative;
    }

    .main-card {
        background: var(--charcoal);
        border: 1px solid var(--dark-grey);
        border-radius: 24px;
        box-shadow: var(--shadow-dark);
        padding: 4rem 3rem;
        width: 100%;
        max-width: 700px;
        text-align: center;
        position: relative;
        overflow: hidden;
        animation: cardEntrance 1s cubic-bezier(0.23, 1, 0.32, 1);
    }

    .main-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, transparent, var(--pure-white), transparent);
        opacity: 0.3;
    }

    .main-card::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at 50% 0%, rgba(255,255,255,0.03) 0%, transparent 50%);
        pointer-events: none;
    }

    @keyframes cardEntrance {
        0% {
            opacity: 0;
            transform: translateY(60px) scale(0.9);
        }
        100% {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    .success-icon-wrapper {
        position: relative;
        margin-bottom: 3rem;
        display: inline-block;
    }

    .success-icon {
        width: 140px;
        height: 140px;
        margin: 0 auto;
        position: relative;
        animation: iconReveal 1.2s ease-out 0.3s both;
    }

    .success-icon::before {
        content: '';
        position: absolute;
        top: -10px;
        left: -10px;
        right: -10px;
        bottom: -10px;
        border: 2px solid rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        animation: ringPulse 2s ease-in-out infinite;
    }

    .checkmark-container {
        width: 140px;
        height: 140px;
        border-radius: 50%;
        background: var(--pure-white);
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        box-shadow: var(--glow-white);
        border: 3px solid var(--dark-grey);
    }

    .checkmark {
        font-size: 60px;
        color: var(--primary-black);
        font-weight: 900;
        animation: checkmarkPop 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.8s both;
    }

    @keyframes iconReveal {
        0% { 
            opacity: 0; 
            transform: scale(0.3) rotate(-90deg); 
        }
        100% { 
            opacity: 1; 
            transform: scale(1) rotate(0deg); 
        }
    }

    @keyframes ringPulse {
        0%, 100% { 
            transform: scale(1); 
            opacity: 0.3; 
        }
        50% { 
            transform: scale(1.1); 
            opacity: 0.1; 
        }
    }

    @keyframes checkmarkPop {
        0% { 
            opacity: 0; 
            transform: scale(0) rotate(-180deg); 
        }
        100% { 
            opacity: 1; 
            transform: scale(1) rotate(0deg); 
        }
    }

    .success-title {
        font-size: 3rem;
        font-weight: 900;
        color: var(--pure-white);
        margin-bottom: 1.5rem;
        letter-spacing: -2px;
        line-height: 1.1;
        animation: titleSlide 0.8s ease-out 0.6s both;
        position: relative;
    }

    .success-title::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 2px;
        background: linear-gradient(90deg, transparent, var(--pure-white), transparent);
        animation: underlineGrow 0.8s ease-out 1.2s both;
    }

    @keyframes titleSlide {
        0% { 
            opacity: 0; 
            transform: translateY(40px); 
        }
        100% { 
            opacity: 1; 
            transform: translateY(0); 
        }
    }

    @keyframes underlineGrow {
        0% { 
            width: 0; 
            opacity: 0; 
        }
        100% { 
            width: 80px; 
            opacity: 1; 
        }
    }

    .success-subtitle {
        font-size: 1.3rem;
        color: var(--light-grey);
        margin-bottom: 3rem;
        line-height: 1.6;
        font-weight: 400;
        animation: subtitleFade 0.8s ease-out 0.8s both;
    }

    @keyframes subtitleFade {
        0% { 
            opacity: 0; 
            transform: translateY(20px); 
        }
        100% { 
            opacity: 1; 
            transform: translateY(0); 
        }
    }

    .order-summary {
        background: var(--soft-black);
        border: 1px solid var(--dark-grey);
        border-radius: 16px;
        padding: 2.5rem;
        margin: 2.5rem 0;
        text-align: left;
        position: relative;
        animation: summarySlide 0.8s ease-out 1s both;
    }

    .order-summary::before {
        content: '';
        position: absolute;
        top: 0;
        left: 20px;
        right: 20px;
        height: 1px;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
    }

    @keyframes summarySlide {
        0% { 
            opacity: 0; 
            transform: translateY(30px) scale(0.95); 
        }
        100% { 
            opacity: 1; 
            transform: translateY(0) scale(1); 
        }
    }

    .order-number {
        font-size: 1.5rem;
        color: var(--pure-white);
        font-weight: 700;
        margin-bottom: 2rem;
        padding: 1rem 2rem;
        background: var(--charcoal);
        border: 1px solid var(--dark-grey);
        border-radius: 12px;
        display: inline-block;
        letter-spacing: 2px;
        text-transform: uppercase;
        position: relative;
        overflow: hidden;
    }

    .order-number::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.05), transparent);
        animation: shimmer 3s infinite;
    }

    @keyframes shimmer {
        0% { left: -100%; }
        100% { left: 100%; }
    }

    .order-details {
        color: var(--light-grey);
        font-size: 1.1rem;
        line-height: 1.8;
        font-weight: 400;
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 0;
        border-bottom: 1px solid var(--dark-grey);
        transition: all 0.3s ease;
    }

    .detail-row:last-child {
        border-bottom: none;
    }

    .detail-row:hover {
        background: rgba(255, 255, 255, 0.02);
        border-radius: 8px;
        padding-left: 1rem;
        padding-right: 1rem;
    }

    .detail-label {
        color: var(--medium-grey);
        font-weight: 500;
    }

    .detail-value {
        color: var(--pure-white);
        font-weight: 600;
        text-align: right;
    }

    .action-buttons {
        display: flex;
        gap: 1.5rem;
        justify-content: center;
        margin-top: 3rem;
        flex-wrap: wrap;
        animation: buttonsReveal 0.8s ease-out 1.2s both;
    }

    @keyframes buttonsReveal {
        0% { 
            opacity: 0; 
            transform: translateY(40px); 
        }
        100% { 
            opacity: 1; 
            transform: translateY(0); 
        }
    }

    .btn {
        padding: 1.2rem 3rem;
        font-size: 1rem;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
        letter-spacing: 1px;
        border: none;
        cursor: pointer;
        border-radius: 12px;
        position: relative;
        overflow: hidden;
        text-transform: uppercase;
        min-width: 220px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
        transition: left 0.6s ease;
    }

    .btn:hover::before {
        left: 100%;
    }

    .btn-primary {
        background: var(--pure-white);
        color: var(--primary-black);
        border: 2px solid var(--pure-white);
        box-shadow: var(--shadow-light);
    }

    .btn-primary:hover {
        background: var(--off-white);
        transform: translateY(-4px);
        box-shadow: var(--shadow-dark);
    }

    .btn-secondary {
        background: transparent;
        color: var(--light-grey);
        border: 2px solid var(--dark-grey);
        box-shadow: var(--shadow-subtle);
    }

    .btn-secondary:hover {
        background: var(--charcoal);
        color: var(--pure-white);
        border-color: var(--medium-grey);
        transform: translateY(-4px);
        box-shadow: var(--shadow-light);
    }

    .btn:active {
        transform: translateY(-2px);
    }

    .gratitude-message {
        font-size: 1.1rem;
        color: var(--medium-grey);
        margin-top: 3rem;
        font-style: italic;
        font-weight: 300;
        line-height: 1.6;
        animation: gratitudeFade 0.8s ease-out 1.4s both;
    }

    @keyframes gratitudeFade {
        0% { 
            opacity: 0; 
        }
        100% { 
            opacity: 1; 
        }
    }

    .corner-accent {
        position: absolute;
        width: 40px;
        height: 40px;
        border: 2px solid rgba(255, 255, 255, 0.1);
    }

    .corner-accent.top-left {
        top: 20px;
        left: 20px;
        border-right: none;
        border-bottom: none;
    }

    .corner-accent.top-right {
        top: 20px;
        right: 20px;
        border-left: none;
        border-bottom: none;
    }

    .corner-accent.bottom-left {
        bottom: 20px;
        left: 20px;
        border-right: none;
        border-top: none;
    }

    .corner-accent.bottom-right {
        bottom: 20px;
        right: 20px;
        border-left: none;
        border-top: none;
    }

    /* Mobile responsiveness */
    @media (max-width: 768px) {
        .success-container {
            padding: 1rem;
        }
        
        .main-card {
            padding: 3rem 1.5rem;
            margin: 1rem;
            border-radius: 20px;
        }
        
        .success-title {
            font-size: 2.2rem;
        }
        
        .success-icon {
            width: 120px;
            height: 120px;
        }
        
        .checkmark-container {
            width: 120px;
            height: 120px;
        }
        
        .checkmark {
            font-size: 50px;
        }
        
        .action-buttons {
            flex-direction: column;
            align-items: center;
        }
        
        .btn {
            width: 100%;
            max-width: 300px;
        }
        
        .detail-row {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
        
        .detail-value {
            text-align: left;
        }
        
        .order-summary {
            padding: 2rem 1.5rem;
        }
    }

    /* Loading states */
    .btn.loading {
        opacity: 0.7;
        pointer-events: none;
        transform: scale(0.98);
    }

    .btn.loading::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 20px;
        height: 20px;
        margin: -10px 0 0 -10px;
        border: 2px solid transparent;
        border-top: 2px solid currentColor;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Sparkle animation */
    @keyframes sparkle {
        0%, 100% { 
            opacity: 0; 
            transform: scale(0) rotate(0deg); 
        }
        50% { 
            opacity: 1; 
            transform: scale(1) rotate(180deg); 
        }
    }
</style>

<div class="floating-elements">
    <div class="geometric-shape"></div>
    <div class="geometric-shape"></div>
    <div class="geometric-shape"></div>
    <div class="geometric-shape"></div>
</div>

<div class="success-container">
    <div class="main-card">
        <div class="corner-accent top-left"></div>
        <div class="corner-accent top-right"></div>
        <div class="corner-accent bottom-left"></div>
        <div class="corner-accent bottom-right"></div>
        
        <div class="success-icon-wrapper">
            <div class="success-icon">
                <div class="checkmark-container">
                    <div class="checkmark">✓</div>
                </div>
            </div>
        </div>
        
        <h1 class="success-title">Order Confirmed</h1>
        
        <p class="success-subtitle">
            Your order has been successfully placed and is now being processed. 
            We'll keep you updated every step of the way.
        </p>
        
        <div class="order-summary">
            <div class="order-number">
            <%= order.orderId%>
            </div>
            
        </div>
        
        <div class="action-buttons">
            <a href="/orders/:orderId" class="btn btn-primary" onclick="handleButtonClick(this, 'TRACKING...')">
                View Order Details
            </a>
            <a href="/shop" class="btn btn-secondary" onclick="handleButtonClick(this, 'LOADING...')">
                Continue Shopping
            </a>
        </div>
        
        <p class="gratitude-message">
            Thank you for choosing us. We're committed to delivering 
            an exceptional experience with your purchase.
        </p>
    </div>
</div>

<script>
    // Enhanced page load effects
    document.addEventListener('DOMContentLoaded', function() {
        initializeSparkles();
        setupParallaxEffect();
        addHoverEffects();
    });

    function initializeSparkles() {
        const sparkleCount = 15;
        const container = document.querySelector('.main-card');
        
        for (let i = 0; i < sparkleCount; i++) {
            const sparkle = document.createElement('div');
            sparkle.style.cssText = `
                position: absolute;
                width: 3px;
                height: 3px;
                background: rgba(255, 255, 255, 0.6);
                border-radius: 50%;
                top: ${Math.random() * 100}%;
                left: ${Math.random() * 100}%;
                animation: sparkle ${3 + Math.random() * 4}s ease-in-out infinite;
                animation-delay: ${Math.random() * 3}s;
                pointer-events: none;
                z-index: 10;
            `;
            container.appendChild(sparkle);
        }
    }

    function setupParallaxEffect() {
        document.addEventListener('mousemove', function(e) {
            const shapes = document.querySelectorAll('.geometric-shape');
            const mouseX = e.clientX / window.innerWidth;
            const mouseY = e.clientY / window.innerHeight;
            
            shapes.forEach((shape, index) => {
                const speed = (index + 1) * 0.3;
                const x = (mouseX - 0.5) * speed * 30;
                const y = (mouseY - 0.5) * speed * 30;
                shape.style.transform += ` translate(${x}px, ${y}px)`;
            });
        });
    }

    function addHoverEffects() {
        const card = document.querySelector('.main-card');
        
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-5px)';
            this.style.boxShadow = '0 30px 80px rgba(0, 0, 0, 0.6)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
            this.style.boxShadow = '0 20px 60px rgba(0, 0, 0, 0.4)';
        });
    }

    function handleButtonClick(button, loadingText) {
        const originalText = button.textContent;
        button.classList.add('loading');
        button.textContent = loadingText;
        
        // Create loading effect
        setTimeout(() => {
            button.classList.remove('loading');
            button.textContent = originalText;
        }, 2500);
        
        // Prevent default link behavior for demo
        return false;
    }

    // Add intersection observer for scroll animations
    const observerOptions = {
        threshold: 0.2,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.animationPlayState = 'running';
            }
        });
    }, observerOptions);

    // Observe all animated elements
    document.querySelectorAll('[style*="animation"]').forEach(el => {
        observer.observe(el);
    });

    // Add keyboard navigation
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
            const focusedElement = document.activeElement;
            if (focusedElement.classList.contains('btn')) {
                focusedElement.click();
            }
        }
    });
</script>

</body>
</html>