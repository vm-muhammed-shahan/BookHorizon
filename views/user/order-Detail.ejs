<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order #<%= order.orderId %></title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f3f4f6;
      margin: 0;
      padding: 0;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 16px;
    }

    h1 {
      font-size: 24px;
      font-weight: bold;
      color: #1f2937;
      margin-bottom: 16px;
    }

    .card {
      background-color: #ffffff;
      padding: 24px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
    }

    .grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: 24px;
      margin-bottom: 24px;
    }

    @media (min-width: 768px) {
      .grid {
        grid-template-columns: 1fr 1fr;
      }
    }

    .section {
      background-color: #f9fafb;
      padding: 24px;
      border-radius: 6px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    h2 {
      font-size: 18px;
      font-weight: 600;
      color: #374151;
      margin-bottom: 8px;
    }

    p,
    dl dt,
    dl dd {
      font-size: 16px;
      color: #4b5563;
      margin-bottom: 8px;
    }

    dl dt {
      font-weight: 600;
      display: inline-block;
      width: 150px;
    }

    dl dd {
      display: inline-block;
    }

    dl .highlight {
      font-weight: bold;
      color: #1f2937;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background-color: #ffffff;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
      margin-bottom: 24px;
    }

    th,
    td {
      padding: 8px;
      text-align: left;
      border: 1px solid #e5e7eb;
    }

    th {
      background-color: #e5e7eb;
      font-weight: 600;
      color: #374151;
    }

    tr:hover {
      background-color: #f9fafb;
    }

    button,
    a.button {
      display: inline-block;
      padding: 8px 16px;
      border-radius: 4px;
      text-align: center;
      font-size: 14px;
      cursor: pointer;
      text-decoration: none;
      transition: background-color 0.2s;
    }

    .btn-cancel {
      background-color: #ef4444;
      color: #ffffff;
    }

    .btn-cancel:hover {
      background-color: #dc2626;
    }

    .btn-return {
      background-color: #eab308;
      color: #ffffff;
    }

    .btn-return:hover {
      background-color: #ca8a04;
    }

    .btn-invoice {
      background-color: #22c55e;
      color: #ffffff;
    }

    .btn-invoice:hover {
      background-color: #16a34a;
    }

    .link-back {
      color: #3b82f6;
      text-decoration: none;
    }

    .link-back:hover {
      text-decoration: underline;
      color: #1d4ed8;
    }

    .table-container {
      overflow-x: auto;
      margin-bottom: 24px;
    }

    .mb-6 {
      margin-bottom: 24px;
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }

    .modal-content {
      background-color: #ffffff;
      padding: 24px;
      border-radius: 8px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      position: relative;
    }

    .modal-content h3 {
      font-size: 20px;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 16px;
    }

    .modal-content textarea {
      width: 100%;
      padding: 8px;
      border: 1px solid #e5e7eb;
      border-radius: 4px;
      font-size: 14px;
      margin-bottom: 16px;
      resize: vertical;
    }

    .modal-content textarea:focus {
      outline: none;
      border-color: #3b82f6;
    }

    .modal-content .btn-close {
      position: absolute;
      top: 16px;
      right: 16px;
      background: none;
      border: none;
      font-size: 24px;
      color: #4b5563;
      cursor: pointer;
    }

    .modal-content .btn-submit {
      background-color: #3b82f6;
      color: #ffffff;
      padding: 8px 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .modal-content .btn-submit:hover {
      background-color: #1d4ed8;
    }

    .notification {
      margin-bottom: 24px;
      padding: 16px;
      border-radius: 4px;
      font-size: 16px;
    }

    .notification-info {
      background-color: #dbeafe;
      color: #1e40af;
    }
  </style>
  <script>
    let currentOrderId = null;
    let currentProductId = null;
    let currentAction = null;

    function openModal(action, orderId, productId = null) {
      currentAction = action;
      currentOrderId = orderId;
      currentProductId = productId;
      document.getElementById('modalTitle').textContent = 
        action === 'cancel' ? 
        (productId ? 'Cancel Item' : 'Cancel Entire Order') : 
        'Return Item';
      document.getElementById('reasonInput').value = '';
      document.getElementById('reasonModal').style.display = 'flex';
    }

    function closeModal() {
      document.getElementById('reasonModal').style.display = 'none';
      currentOrderId = null;
      currentProductId = null;
      currentAction = null;
    }

    async function submitReason() {
      const reason = document.getElementById('reasonInput').value.trim();
      
      if (currentAction === 'return' && !reason) {
        alert('Return reason is mandatory.');
        return;
      }

      try {
        const url = currentAction === 'cancel' ? '/orders/cancel' : '/orders/return';
        const body = currentAction === 'cancel' 
          ? { orderId: currentOrderId, productId: currentProductId, reason }
          : { orderId: currentOrderId, productId: currentProductId, reason };

        const response = await fetch(url, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(body)
        });

        const result = await response.json();
        if (result.success) {
          alert(result.message);
          location.reload();
        } else {
          alert(result.error);
        }
      } catch (error) {
        alert('An error occurred. Please try again.');
      }

      closeModal();
    }
  </script>
</head>

<body>
  <div class="container">
    <h1>Order #<%= order.orderId %></h1>
    <% if (req.session.notification) { %>
      <div class="notification notification-info">
        <%= req.session.notification.text %>
      </div>
      <% req.session.notification = null; %>
    <% } %>
    <div class="card">
      <!-- Order Summary -->
      <div class="grid">
        <div class="section">
          <h2>Order Summary</h2>
          <dl>
            <div>
              <dt>Order ID:</dt>
              <dd><%= order.orderId %></dd>
            </div>
            <div>
              <dt>Date:</dt>
              <dd><%= order.createdOn ? new Date(order.createdOn).toLocaleString() : 'N/A' %></dd>
            </div>
            <div>
              <dt>Status:</dt>
              <dd><%= order.status %></dd>
            </div>
            <div>
              <dt>Payment Status:</dt>
              <dd><%= order.paymentStatus %></dd>
            </div>
            <div>
              <dt>Payment Method:</dt>
              <dd><%= order.paymentMethod === 'cod' ? 'Cash on Delivery' : 'Online Payment' %></dd>
            </div>
            <div>
              <dt>Total Price:</dt>
              <dd>₹<%= order.totalPrice ? order.totalPrice.toFixed(2) : '0.00' %></dd>
            </div>
            <div>
              <dt>Discount:</dt>
              <dd>₹<%= order.discount ? order.discount.toFixed(2) : '0.00' %></dd>
            </div>
            <div>
              <dt>Shipping Charge:</dt>
              <dd>₹<%= order.shippingCharge ? order.shippingCharge.toFixed(2) : '0.00' %></dd>
            </div>
            <div>
              <dt>Final Amount:</dt>
              <dd class="highlight">₹<%= order.finalAmount ? order.finalAmount.toFixed(2) : '0.00' %></dd>
            </div>
            <% if (order.couponApplied) { %>
              <div>
                <dt>Coupon Applied:</dt>
                <dd>Yes</dd>
              </div>
            <% } %>
          </dl>
        </div>
        <div class="section">
          <h2>Shipping Address</h2>
          <dl>
            <div>
              <dt>Name:</dt>
              <dd><%= order.address.name %></dd>
            </div>
            <div>
              <dt>Address:</dt>
              <dd><%= order.address.landMark %>, <%= order.address.city %>, <%= order.address.state %>, <%= order.address.pincode %></dd>
            </div>
            <div>
              <dt>Phone:</dt>
              <dd><%= order.address.phone %></dd>
            </div>
            <% if (order.address.altPhone) { %>
              <div>
                <dt>Alt Phone:</dt>
                <dd><%= order.address.altPhone %></dd>
              </div>
            <% } %>
          </dl>
        </div>
      </div>

      <!-- Items Table -->
      <div class="table-container">
        <h2>Items</h2>
        <table>
          <thead>
            <tr>
              <th>Product</th>
              <th>Quantity</th>
              <th>Price</th>
              <th>Total</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% order.orderedItems.forEach(item => { %>
              <tr>
                <td><%= item.product && item.product.productName ? item.product.productName : 'N/A' %></td>
                <td><%= item.quantity %></td>
                <td>₹<%= item.price ? item.price.toFixed(2) : '0.00' %></td>
                <td>₹<%= (item.price * item.quantity).toFixed(2) %></td>
                <td>
                  <% if (item.cancelled) { %>
                    Cancelled: <%= item.cancelReason || 'No reason provided' %>
                  <% } else if (item.returned && item.returnStatus === 'pending') { %>
                    Return Requested: <%= item.returnReason || 'No reason provided' %>
                  <% } else if (item.returned && item.returnStatus === 'approved') { %>
                    Returned: <%= item.returnReason || 'No reason provided' %>
                  <% } else if (item.returned && item.returnStatus === 'rejected') { %>
                    Return Rejected: <%= item.returnReason || 'No reason provided' %>
                  <% } else { %>
                    Active
                  <% } %>
                </td>
                <td>
                  <% if (!item.cancelled && !item.returned && (order.status === 'Pending' || order.status === 'Processing')) { %>
                    <button onclick="openModal('cancel', '<%= order.orderId %>', '<%= item.product._id %>')" class="btn-cancel">Cancel Item</button>
                  <% } %>
                  <% if (!item.cancelled && !item.returned && order.status === 'Delivered') { %>
                    <button onclick="openModal('return', '<%= order.orderId %>', '<%= item.product._id %>')" class="btn-return">Return Item</button>
                  <% } %>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <!-- Cancel Entire Order -->
      <% if (order.status === 'Pending' || order.status === 'Processing') { %>
        <div class="mb-6">
          <button onclick="openModal('cancel', '<%= order.orderId %>')" class="btn-cancel">Cancel Entire Order</button>
        </div>
      <% } %>

      <!-- Download Invoice -->
      <div class="mb-6">
        <a href="/orders/invoice/<%= order.orderId %>" class="button btn-invoice">Download Invoice</a>
      </div>

      <!-- Back to Orders -->
      <a href="/orders" class="link-back">Back to Orders</a>
    </div>
  </div>

  <!-- Reason Modal -->
  <div id="reasonModal" class="modal">
    <div class="modal-content">
      <button class="btn-close" onclick="closeModal()">×</button>
      <h3 id="modalTitle">Reason</h3>
      <textarea id="reasonInput" rows="4" placeholder="Enter your reason here..."></textarea>
      <button class="btn-submit" onclick="submitReason()">Submit</button>
    </div>
  </div>
</body>