<!DOCTYPE html>
<html lang="zxx">

<head>
  <meta charset="UTF-8" />
  <meta name="description" content="Male_Fashion Template" />
  <meta name="keywords" content="Male_Fashion, unica, creative, html" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>BookHorizon</title>
  <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
    rel="stylesheet" />
  <link rel="stylesheet" href="css/bootstrap.min.css" type="text/css" />
  <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css" />
  <link rel="stylesheet" href="css/elegant-icons.css" type="text/css" />
  <link rel="stylesheet" href="css/magnific-popup.css" type="text/css" />
  <link rel="stylesheet" href="css/nice-select.css" type="text/css" />
  <link rel="stylesheet" href="css/owl.carousel.min.css" type="text/css" />
  <link rel="stylesheet" href="css/slicknav.min.css" type="text/css" />
  <link rel="stylesheet" href="css/style.css" type="text/css" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
  <style>
    .header__nav__option .sign-in-link {
      font-size: 16px;
      color: #333;
      margin-right: 15px;
      text-decoration: none;
      font-weight: 600;
    }

    .header__nav__option .sign-in-link:hover {
      color: #ff7f50;
    }

    .signup-section {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
    }

    .signup-form,
    .signup-image {
      flex: 1;
      padding: 10px;
    }

    .signup-form {
      max-width: 50%;
    }

    .signup-image {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      max-width: 40%;
    }

    .signup-image img {
      max-width: 100%;
      height: auto;
    }

    .social-btns {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 10px;
    }

    .social-btns button {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
    }

    .spacer {
      height: 30px;
    }

    .form-group label {
      font-size: 0.875rem;
    }

    .form-control {
      font-size: 0.875rem;
      padding: 0.5rem;
    }

    .btn-primary {
      padding: 0.5rem 1rem;
      font-size: 0.875rem;
    }

    .card-title {
      font-size: 1.25rem;
    }

    .signup-image .sign-in-link {
      color: #333;
      text-decoration: none;
    }

    .signup-image .sign-in-link:hover {
      color: #ff7f50;
    }

    .error-message {
      color: red;
      font-size: 0.75rem;
      display: none;
    }

    .valid-field {
      border: 2px solid #28a745 !important;
    }

    .valid-tick {
      color: #28a745;
      font-size: 1.5rem;
      display: none;
      text-align: center;
      margin-bottom: 10px;
    }
  </style>
</head>

<body>
  <div class="container mt-5 mb-1">
    <div class="row justify-content-center">
      <div class="col-md-8">
        <div class="card">
          <div class="card-body signup-section">
            <div class="signup-form">
              <div id="valid-tick" class="valid-tick">
                <i class="fas fa-check-circle"></i> All fields are valid
              </div>
              <h3 class="card-title text-center">Sign Up</h3>
              <form id="signform" method="post" action="/signup">
                <div class="form-group">
                  <label for="name">Full Name</label>
                  <input type="text" class="form-control" name="name" id="name" placeholder="Enter Name" />
                  <div id="error1" class="error-message"></div>
                </div>
                <div class="form-group">
                  <label for="email">Email address</label>
                  <input type="email" class="form-control" name="email" id="email" placeholder="Enter email" />
                  <div id="error2" class="error-message"></div>
                </div>
                <div class="form-group">
                  <label for="phone">Phone Number</label>
                  <input type="text" class="form-control" name="phone" id="phone" placeholder="Enter phone number" />
                  <div id="error3" class="error-message"></div>
                </div>
                <div class="form-group">
                  <label for="password">Password</label>
                  <input type="password" class="form-control" name="password" id="password" placeholder="Password" />
                  <div id="error4" class="error-message"></div>
                </div>
                <div class="form-group">
                  <label for="confirm-password">Confirm Password</label>
                  <input type="password" class="form-control" name="cpassword" id="confirm-password"
                    placeholder="Confirm Password" />
                  <div id="error5" class="error-message"></div>
                </div>
                <% if(locals.message && message.length > 0) { %>
                  <div class="alert alert-danger text-center">
                    <%= message %>
                  </div>
                <% } %>
                <div class="d-flex justify-content-between align-items-center">
                  <button type="submit" class="btn btn-primary" name="submit" id="submit-btn" disabled>
                    Sign Up
                  </button>
                  <div class="mt-2px">
                    <p>or sign up with</p>
                  </div>
                  <div class="social-btns">
                    <a href="/auth/google" class="btn btn-outline-danger" name="google-signup" formnovalidate>
                      <img src="img/googlesignup.png" alt="Google Logo" style="width: 28px; height: 28px" />
                    </a>
                  </div>
                </div>
              </form>
            </div>
            <div class="signup-image">
              <a href="/">
                <!-- <img src="img/signup.svg" alt="Shopping Site" /> -->
              </a>
              <div class="text-center mt-2">
                <a href="/login" class="sign-in-link">Already registered? Log in</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="spacer"></div>
  <%- include("../../views/partials/user/footer") %>

  <script>
    const nameid = document.getElementById("name");
    const emailid = document.getElementById("email");
    const phoneid = document.getElementById("phone");
    const passid = document.getElementById("password");
    const cpassid = document.getElementById("confirm-password");
    const error1 = document.getElementById("error1");
    const error2 = document.getElementById("error2");
    const error3 = document.getElementById("error3");
    const error4 = document.getElementById("error4");
    const error5 = document.getElementById("error5");
    const signform = document.getElementById("signform");
    const submitBtn = document.getElementById("submit-btn");
    const validTick = document.getElementById("valid-tick");

    // Debounce function to limit real-time validation frequency
    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }

    function nameValidateChecking() {
      const nameval = nameid.value.trim();
      const namepattern = /^[A-Za-z\s]{2,50}$/;
      if (!nameval) {
        error1.style.display = "block";
        error1.innerHTML = "Name is required";
        nameid.classList.remove("valid-field");
        return false;
      } else if (!namepattern.test(nameval)) {
        error1.style.display = "block";
        error1.innerHTML = "Name must be 2-50 characters, letters and spaces only";
        nameid.classList.remove("valid-field");
        return false;
      } else {
        error1.style.display = "none";
        error1.innerHTML = "";
        nameid.classList.add("valid-field");
        return true;
      }
    }

    function emailValidateChecking() {
      const emailval = emailid.value.trim();
      const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      if (!emailval) {
        error2.style.display = "block";
        error2.innerHTML = "Email is required";
        emailid.classList.remove("valid-field");
        return false;
      } else if (!emailPattern.test(emailval)) {
        error2.style.display = "block";
        error2.innerHTML = "Invalid email format";
        emailid.classList.remove("valid-field");
        return false;
      } else {
        error2.style.display = "none";
        error2.innerHTML = "";
        emailid.classList.add("valid-field");
        return true;
      }
    }

    function phoneValidateChecking() {
      const phoneval = phoneid.value.trim();
      const phonePattern = /^\d{10}$/;
      if (!phoneval) {
        error3.style.display = "block";
        error3.innerHTML = "Phone number is required";
        phoneid.classList.remove("valid-field");
        return false;
      } else if (!phonePattern.test(phoneval)) {
        error3.style.display = "block";
        error3.innerHTML = "Phone number must be exactly 10 digits";
        phoneid.classList.remove("valid-field");
        return false;
      } else {
        error3.style.display = "none";
        error3.innerHTML = "";
        phoneid.classList.add("valid-field");
        return true;
      }
    }

    function passValidationChecking() {
      const passval = passid.value;
      const cpassval = cpassid.value;
      const passPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
      let isValid = true;

      if (!passval) {
        error4.style.display = "block";
        error4.innerHTML = "Password is required";
        passid.classList.remove("valid-field");
        isValid = false;
      } else if (!passPattern.test(passval)) {
        error4.style.display = "block";
        error4.innerHTML = "Password must be 8+ characters with uppercase, lowercase, number, and special character";
        passid.classList.remove("valid-field");
        isValid = false;
      } else {
        error4.style.display = "none";
        error4.innerHTML = "";
        passid.classList.add("valid-field");
      }

      if (!cpassval) {
        error5.style.display = "block";
        error5.innerHTML = "Confirm password is required";
        cpassid.classList.remove("valid-field");
        isValid = false;
      } else if (passval !== cpassval) {
        error5.style.display = "block";
        error5.innerHTML = "Passwords do not match";
        cpassid.classList.remove("valid-field");
        isValid = false;
      } else {
        error5.style.display = "none";
        error5.innerHTML = "";
        cpassid.classList.add("valid-field");
      }

      return isValid;
    }

    function checkAllFieldsValid() {
      const isNameValid = nameValidateChecking();
      const isEmailValid = emailValidateChecking();
      const isPhoneValid = phoneValidateChecking();
      const isPassValid = passValidationChecking();

      const allValid = isNameValid && isEmailValid && isPhoneValid && isPassValid;
      submitBtn.disabled = !allValid;
      validTick.style.display = allValid ? "block" : "none";
    }

    document.addEventListener("DOMContentLoaded", function () {
      // Initially disable the submit button
      submitBtn.disabled = true;

      // Form submission validation
      signform.addEventListener("submit", function (e) {
        const isNameValid = nameValidateChecking();
        const isEmailValid = emailValidateChecking();
        const isPhoneValid = phoneValidateChecking();
        const isPassValid = passValidationChecking();

        if (!isNameValid || !isEmailValid || !isPhoneValid || !isPassValid) {
          e.preventDefault();
        }
      });

      // Real-time validation with debounce
      nameid.addEventListener("input", debounce(() => {
        nameValidateChecking();
        checkAllFieldsValid();
      }, 300));
      emailid.addEventListener("input", debounce(() => {
        emailValidateChecking();
        checkAllFieldsValid();
      }, 300));
      phoneid.addEventListener("input", debounce(() => {
        phoneValidateChecking();
        checkAllFieldsValid();
      }, 300));
      passid.addEventListener("input", debounce(() => {
        passValidationChecking();
        checkAllFieldsValid();
      }, 300));
      cpassid.addEventListener("input", debounce(() => {
        passValidationChecking();
        checkAllFieldsValid();
      }, 300));
    });
  </script>
</body>

</html>
