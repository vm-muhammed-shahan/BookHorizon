
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Product</title>
  
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
  
  <style>
    :root {
      --primary-color: #4e73df;
      --secondary-color: #858796;
      --success-color: #1cc88a;
      --info-color: #36b9cc;
      --warning-color: #f6c23e;
      --danger-color: #e74a3b;
      --light-color: #f8f9fc;
      --dark-color: #5a5c69;
    }
    
    body {
      background-color: #f8f9fc;
      font-family: 'Nunito', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    }
    
    .page-wrapper {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }
    
    .content-header {
      padding: 1.5rem 0;
      border-bottom: 1px solid #e3e6f0;
      margin-bottom: 1.5rem;
    }
    
    .content-title {
      color: #5a5c69;
      font-weight: 700;
      margin-bottom: 0;
    }
    
    .card {
      border: none;
      border-radius: 0.35rem;
      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
      margin-bottom: 1.5rem;
    }
    
    .card-header {
      background-color: #f8f9fc;
      border-bottom: 1px solid #e3e6f0;
    }
    
    .form-label {
      font-weight: 600;
      color: #5a5c69;
    }
    
    .btn-primary {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    .btn-secondary {
      background-color: var(--secondary-color);
      border-color: var(--secondary-color);
    }
    
    .btn-danger {
      background-color: var(--danger-color);
      border-color: var(--danger-color);
    }
    
    .image-upload-box {
      transition: all 0.3s ease;
      border: 1px solid #e3e6f0;
    }
    
    .image-upload-box:hover {
      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }
    
    .img-placeholder {
      background-color: #f8f9fc;
      border: 2px dashed #d1d3e2;
    }
    
    .remove-image-btn {
      z-index: 10;
      margin: 5px;
      opacity: 0.8;
    }
    
    .remove-image-btn:hover {
      opacity: 1;
    }
    
    footer {
      background-color: #fff;
      border-top: 1px solid #e3e6f0;
      padding: 1rem;
      margin-top: auto;
    }
  </style>
</head>
<body>
  <div class="page-wrapper">
    <div class="container-fluid">
      <div class="content-header">
        <div class="d-flex justify-content-between align-items-center">
          <h2 class="content-title">Edit Product</h2>
          <a href="/admin/products" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to Products
          </a>
        </div>
      </div>

      <div class="row">
        <div class="col-12">
          <div class="card">
            <div class="card-body p-4">
              
              <form id="edit-product-form" enctype="multipart/form-data">
                <input type="hidden" name="productId" value="<%= product._id %>">
                
                <div class="row mb-4">
                  <div class="col-lg-6">
                    <div class="mb-3">
                      <label class="form-label">Product Name</label>
                      <input type="text" class="form-control" name="productName" value="<%= product.productName %>" required>
                    </div>
                  </div>
                  
                  <div class="col-lg-6">
                    <div class="mb-3">
                      <label class="form-label">Category</label>
                      <select class="form-select" name="category" required>
                        <option value="" disabled>Select Category</option>
                        <% cat.forEach(category => { %>
                          <option value="<%= category._id %>" <%= (product.category._id.toString() === category._id.toString()) ? 'selected' : '' %>>
                            <%= category.name %>
                          </option>
                        <% }); %>
                      </select>
                    </div>
                  </div>
                </div>
                
                <div class="row mb-4">
                  <div class="col-lg-4">
                    <div class="mb-3">
                      <label class="form-label">Regular Price</label>
                      <div class="input-group">
                        <span class="input-group-text">₹</span>
                        <input type="number" class="form-control" name="regularPrice" value="<%= product.regularPrice %>" min="0" step="0.01" required>
                      </div>
                    </div>
                  </div>
                  
                  <div class="col-lg-4">
                    <div class="mb-3">
                      <label class="form-label">Sale Price</label>
                      <div class="input-group">
                        <span class="input-group-text">₹</span>
                        <input type="number" class="form-control" name="salePrice" value="<%= product.salePrice %>" min="0" step="0.01" required>
                      </div>
                    </div>
                  </div>
                  
                  <div class="col-lg-4">
                    <div class="mb-3">
                      <label class="form-label">Quantity</label>
                      <input type="number" class="form-control" name="quantity" value="<%= product.quantity %>" min="0" required>
                    </div>
                  </div>
                </div>
                
                <div class="mb-4">
                  <label class="form-label">Description</label>
                  <textarea class="form-control" name="description" rows="4" required><%= product.description %></textarea>
                </div>
                
                <div class="mb-4">
                  <label class="form-label">Product Images</label>
                  <p class="text-muted small">Upload up to 3 images. Click on an image to crop it.</p>
                  
                  <div class="row mb-3">
                    <% for(let i = 0; i < 3; i++) { %>
                      <div class="col-md-3 mb-3">
                        <div class="card position-relative image-upload-box" data-index="<%= i %>">
                          <div class="card-body p-2 text-center">
                            <% if(product.productImage && product.productImage[i]) { %>
                              <img src="/uploads/product-images/<%= product.productImage[i] %>" 
                                   class="img-preview img-fluid mb-2" alt="Product image <%= i+1 %>"
                                   style="width: 100%; height: 150px; object-fit: cover; border-radius: 5px;">
                              <input type="hidden" name="existingImages[<%= i %>]" value="<%= product.productImage[i] %>">
                            <% } else { %>
                              <div class="img-placeholder mb-2 d-flex align-items-center justify-content-center bg-light"
                                   style="width: 100%; height: 150px; border-radius: 5px;">
                                <i class="fas fa-image fa-3x text-muted"></i>
                              </div>
                            <% } %>
                            
                            <input type="file" class="form-control form-control-sm image-input" id="image<%= i %>" 
       name="images" accept="image/png, image/jpeg, image/jpg, image/webp" data-index="<%= i %>">
                            
                            <% if(product.productImage && product.productImage[i]) { %>
                              <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 remove-image-btn" 
                                      data-index="<%= i %>">
                                <i class="fas fa-times"></i>
                              </button>
                            <% } %>
                            
                            <input type="hidden" name="croppedImages[<%= i %>]" class="cropped-data" id="croppedImage<%= i %>">
                          </div>
                        </div>
                      </div>
                    <% } %>
                  </div>
                </div>
                
                <div class="d-flex justify-content-end mt-4">
                  <a href="/admin/products" class="btn btn-secondary me-2">Cancel</a>
                  <button type="submit" class="btn btn-primary">Update Product</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <footer class="text-center">
      <p class="mb-0 text-muted">&copy; <%= new Date().getFullYear() %> Admin Dashboard. All rights reserved.</p>
    </footer>
  </div>

  
  <div class="modal fade" id="imageCropModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Crop Image</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="img-container">
            <img id="cropImage" src="" alt="Image to crop" style="max-width: 100%;">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
        </div>
      </div>
    </div>
  </div>

  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      
      let cropper;
      let currentImageIndex;
      const cropModal = new bootstrap.Modal(document.getElementById('imageCropModal'));
      
      
      document.querySelectorAll('.image-input').forEach(input => {
        input.addEventListener('change', function(e) {
          const file = e.target.files[0];
          currentImageIndex = this.dataset.index;
          
          if (file) {
            const reader = new FileReader();
            reader.onload = function(event) {
              document.getElementById('cropImage').src = event.target.result;
              cropModal.show();
              
              document.getElementById('imageCropModal').addEventListener('shown.bs.modal', function() {
                if (cropper) {
                  cropper.destroy();
                }
                
                cropper = new Cropper(document.getElementById('cropImage'), {
                  aspectRatio: NaN, 
                  viewMode: 2,
                  responsive: true,
                  zoomable: true,
                  scalable: true,
                  movable: true
                });
              }, { once: true });
            };
            reader.readAsDataURL(file);
          }
        });
      });
      
      
      document.getElementById('cropButton').addEventListener('click', function() {
        if (!cropper) return;
        
        const canvas = cropper.getCroppedCanvas({
          width: 600,
          height: 600,
          fillColor: '#fff'
        });
        
        const croppedImageData = canvas.toDataURL('image/jpeg');
        document.getElementById(`croppedImage${currentImageIndex}`).value = croppedImageData;
        
        const previewContainer = document.querySelector(`.image-upload-box[data-index="${currentImageIndex}"]`);
        
        let previewImg = previewContainer.querySelector('.img-preview');
        if (!previewImg) {
          const placeholder = previewContainer.querySelector('.img-placeholder');
          if (placeholder) placeholder.remove();
          
          previewImg = document.createElement('img');
          previewImg.className = 'img-preview img-fluid mb-2';
          previewImg.alt = `Product image ${parseInt(currentImageIndex) + 1}`;
          previewImg.style = "width: 100%; height: 150px; object-fit: cover; border-radius: 5px;";
          previewContainer.querySelector('.card-body').prepend(previewImg);
        }
        
        previewImg.src = croppedImageData;
        
        if (!previewContainer.querySelector('.remove-image-btn')) {
          const removeBtn = document.createElement('button');
          removeBtn.type = 'button';
          removeBtn.className = 'btn btn-sm btn-danger position-absolute top-0 end-0 remove-image-btn';
          removeBtn.dataset.index = currentImageIndex;
          removeBtn.innerHTML = '<i class="fas fa-times"></i>';
          previewContainer.appendChild(removeBtn);
          removeBtn.addEventListener('click', handleRemoveImage);
        }
        
        cropModal.hide();
        cropper.destroy();
        cropper = null;
      });
      
      
      function handleRemoveImage(e) {
        const index = this.dataset.index;
        const container = document.querySelector(`.image-upload-box[data-index="${index}"]`);
        const previewImg = container.querySelector('.img-preview');
        if (previewImg) {
          previewImg.remove();
          
          const placeholder = document.createElement('div');
          placeholder.className = 'img-placeholder mb-2 d-flex align-items-center justify-content-center bg-light';
          placeholder.style = "width: 100%; height: 150px; border-radius: 5px;";
          placeholder.innerHTML = '<i class="fas fa-image fa-3x text-muted"></i>';
          container.querySelector('.card-body').prepend(placeholder);
        }
        
        container.querySelector('.image-input').value = '';
        container.querySelector('.cropped-data').value = '';
        
        const existingImageInput = container.querySelector(`input[name="existingImages[${index}]"]`);
        if (existingImageInput) existingImageInput.value = '';
        
        this.remove();
      }
      
      document.querySelectorAll('.remove-image-btn').forEach(btn => {
        btn.addEventListener('click', handleRemoveImage);
      });

     
      function validateForm() {
        const productName = document.querySelector('input[name="productName"]').value;
        const category = document.querySelector('select[name="category"]').value;
        
        if (!productName || !category) {
          Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please fill in all required fields',
            confirmButtonColor: '#3085d6'
          });
          return false;
        }
        return true;
      }

      
      document.getElementById('edit-product-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        if (!validateForm()) {
          return;
        }
        const formData = new FormData(this);
        
      
        Swal.fire({
          icon: 'info',
          title: 'Saving...',
          text: 'Your product is being updated',
          showConfirmButton: false,
          allowOutsideClick: false,
          allowEscapeKey: false
        });

        try {
          const response = await fetch('/admin/editProduct/<%= product._id %>', {
            method: 'POST',
            body: formData
          });
          const result = await response.json();
          if (result.success) {
            Swal.fire({
              icon: 'success',
              title: 'Product Updated',
              text: result.message,
              confirmButtonColor: '#3085d6'
            }).then(() => {
              window.location.href = '/admin/products';
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: result.error || 'An error occurred'
            });
          }
        } catch (error) {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while updating the product'
          });
        }
      });
    });
  </script>
</body>
</html>


   
            





































